import requests
import os
import pyzipper
from datetime import datetime

# Dossier de téléchargement et d'extraction
download_folder = "malicious_pdfs"
extracted_folder = "extracted_pdfs"
os.makedirs(download_folder, exist_ok=True)
os.makedirs(extracted_folder, exist_ok=True)

# Configurer l'API MalwareBazaar
url = "https://mb-api.abuse.ch/api/v1/"
headers = {"API-KEY": "YOUR_KEY_HERE"}  # Ajoutez ici votre clé API si nécessaire

# Filtrer par type de fichier PDF
payload = {
    "query": "get_file_type",
    "file_type": "pdf",
    "limit": 1000
}

# Faire la requête pour récupérer les échantillons
response = requests.post(url, data=payload, headers=headers)
if response.status_code == 200:
    samples = response.json().get("data", [])
    counter = 0
    for sample in samples:
        # Filtrer par date : garder les échantillons plus récents que 2020
        date_added = sample.get("first_seen")
        sample_date = datetime.strptime(date_added, "%Y-%m-%d %H:%M:%S")

        if sample_date.year > 2017:
            sha256_hash = sample.get("sha256_hash")
            # Télécharger chaque fichier
            download_payload = {"query": "get_file", "sha256_hash": sha256_hash}
            download_response = requests.post(url, data=download_payload, headers=headers)
            if download_response.status_code == 200:
                # Sauvegarde du fichier ZIP téléchargé
                zip_file_path = os.path.join(download_folder, f"{sha256_hash}.zip")
                with open(zip_file_path, "wb") as file:
                    file.write(download_response.content)
                print(f"Téléchargé : {zip_file_path}, publié le {date_added}, fichier n° {counter}")
                counter +=1

                # Extraction du fichier PDF avec mot de passe "infected"
                try:
                    with pyzipper.AESZipFile(zip_file_path) as zf:
                        zf.setpassword(b"infected")
                        for filename in zf.namelist():
                            extracted_file_path = os.path.join(extracted_folder, filename)
                            with open(extracted_file_path, "wb") as extracted_file:
                                extracted_file.write(zf.read(filename))
                            print(f"Extrait : {extracted_file_path}")
                except Exception as e:
                    print(f"Erreur lors de l'extraction de {zip_file_path} : {e}")
            else:
                print(f"Erreur de téléchargement pour {sha256_hash}")
else:
    print("Erreur dans la requête : ", response.json().get("message"))
